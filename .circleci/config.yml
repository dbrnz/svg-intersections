version: 2.1

orbs:
  blackduck: signavio/blackduck@1.10.0
  fortify: signavio/fortify@2.0.0

references:
  workspace_root: &workspace_root "~/workspace"

executors:
  node:
    resource_class: medium+
    docker:
      # On Circle-CI We have to use a build images approved by SAP (for build compliance)
      # see https://wiki.one.int.sap/wiki/pages/viewpage.action?pageId=2650697023
      - image: node:16
  ubuntu:
    machine:
      image: "ubuntu-2204:current"
    resource_class: 2xlarge

jobs:

  build:
    executor: node
    working_directory: *workspace_root
    steps:
      - checkout:
          path: *workspace_root
      - run: npm install
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - node_modules
  
  sonar_qube_scan:
    executor: node
    working_directory: *workspace_root
    steps:
      - checkout:
          path: *workspace_root
      - run: npm install
      - run: npm run test-with-coverage
      - run:
          name: Sonar scan
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
                PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | sed -E "s/.+\/([0-9]+)$/\1/g")
                SONAR_ARGS="\
                  sonar.pullrequest.key=${PR_NUMBER} \
                  sonar.pullrequest.branch=${CIRCLE_BRANCH} \
                  sonar.pullrequest.base=master"
              else
                SONAR_ARGS="\
                  sonar.branch.name=${CIRCLE_BRANCH}"
              fi

            node analyse.js $SONAR_ARGS
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - node_modules

  black_duck_scan:
    executor: node
    working_directory: *workspace_root
    steps:
      - checkout:
          path: *workspace_root
      - attach_workspace:
          at: *workspace_root
      - blackduck/blackduck-detect:
          blackduck-project-group: SAP_Signavio_Process_Manager
          blackduck-project-name: svg-intersections
          blackduck-project-path: *workspace_root

  fortify-translate-and-scan-upload:
    executor: ubuntu
    working_directory: *workspace_root
    steps:
      - checkout
      - fortify/setup
      - run:
          name: 'Fortify translate: svg-intersections'
          command: |
            set -x
            sourceanalyzer \
              -b svg-intersections \
              -verbose \
              $(find . -type d -path '*/lib' | paste -s -d ' ')

      - run:
          name: 'Fortify: scan'
          command: |
            sourceanalyzer \
              -b svg-intersections \
              -verbose \
              -scan \
              -f svg-intersections.fpr
      - store_artifacts:
          path: svg-intersections.fpr
      - run:
          name: 'Fortify: upload'
          command: |
            fortifyclient \
               -url "$FORTIFY_SSC" \
               -authtoken "$SSC_API_TOKEN" \
               uploadFPR \
               -file svg-intersections.fpr \
               -project signavio-svg-intersections \
               -version master

workflows:
  version: 2
  full_workflow:
    jobs:
      - build
      - sonar_qube_scan:
          context: SonarQubeSAP
          requires:
            - build

  nightly-blackduck-scan:
#    triggers:
#      - schedule:
#          cron: '0 0 * * *'
#          filters:
#            branches:
#              only: master
    jobs:
      - build
      - black_duck_scan:
          context: BlackDuck
          requires:
            - build

  weekly-fortify-scan:
#    triggers:
#      - schedule:
#          cron: "0 0 * * 0"
#          filters:
#            branches:
#              only:
#                - master
    jobs:
      - fortify-translate-and-scan-upload:
          context:
            - fortify
